`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04/08/2025 02:11:10 AM
// Design Name: 
// Module Name: InstructionMemory
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module InstructionMemory(
    input [5:0] addr, output [31:0] data_out
    );
    reg [31:0] mem [0:63];
    assign data_out = mem[addr];
    initial begin
           mem[0]=32'b000000000000_00000_010_00001_0000011; // lw x1, 0(x0)
           mem[1]=32'b000000000100_00000_010_00010_0000011; // lw x2, 4(x0)
           mem[2]=32'b000000001000_00000_010_00011_0000011; // lw x3, 8(x0)
           mem[3]=32'b0000000_00010_00001_000_00101_0110011; // add x5, x1, x2
           mem[4]=32'b0100000_00010_00001_000_00110_0110011; // sub x6, x1, x2
           mem[5]=32'b0000000_00010_00001_111_00111_0110011; // and x7, x1, x2
           mem[6]=32'b0000000_00010_00001_110_01000_0110011; // or x8, x1, x2
           mem[7]=32'b0000000_00010_00001_100_01001_0110011; // xor x9, x1, x2
           mem[8]=32'b0000000_00010_00001_001_01010_0110011; // sll x10, x1, x2
           mem[9]=32'b0000000_00010_00001_101_01011_0110011; // srl x11, x1, x2
           mem[10]=32'b0100000_00010_00001_101_01100_0110011; // sra x12, x1, x2
           mem[11]=32'b0000000_00010_00001_010_01101_0110011; // slt x13, x1, x2
           mem[12]=32'b0000000_00010_00001_011_01110_0110011; // sltu x14, x1, x2
    end
endmodule
